syntax = "proto3";

import "SolidTask.proto";
import "TaskId.proto";
import "Task.proto";
import "Label.proto";
import "google/protobuf/empty.proto";

package task_manager;

enum TaskServiceStatus
{
    kOk = 0;
    kNotPresentId = 1;
    kLoadFailure = 2;
    kSaveFailure = 3;
    kNotPresentLabel = 4;
}

message PlainResponse
{
    TaskServiceStatus status = 1;
}

message TaskIdResponse
{
    TaskServiceStatus status = 1;
    TaskId task_id = 2;
}

message SolidTasksResponse
{
    TaskServiceStatus status = 1;
    repeated SolidTask solid_tasks = 2;
}

message TaskIdsRequest
{
    repeated TaskId task_ids = 1;
}

message TaskAndTaskIdRequest
{
    TaskId task_id = 1;
    Task task = 2;
}

message TaskIdAndLabelRequest
{
    TaskId task_id = 1;
    Label label = 2;
}

service TaskService
{
    rpc AddTask(Task) returns (TaskIdResponse);
    rpc AddSubtask(TaskAndTaskIdRequest) returns (TaskIdResponse);
    rpc Edit(TaskAndTaskIdRequest) returns (PlainResponse);
    rpc Complete(TaskId) returns (PlainResponse);
    rpc Delete(TaskId) returns (PlainResponse);
    rpc GetAllSolidTasks(google.protobuf.Empty) returns (SolidTasksResponse);
    rpc GetSpecifiedSolidTasks(TaskIdsRequest) returns (SolidTasksResponse);
    rpc GetTasksByLabel(Label) returns (SolidTasksResponse);
    rpc Load(google.protobuf.Empty) returns (PlainResponse);
    rpc Save(google.protobuf.Empty) returns (PlainResponse);

    rpc AddLabel(TaskIdAndLabelRequest) returns (PlainResponse);
    rpc DeleteLabel(TaskIdAndLabelRequest) returns (PlainResponse);
}